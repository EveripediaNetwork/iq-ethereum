{
  "address": "0x87045eE9e4dEBbeb86EbBCb56E8Dc7c5ba9F1c2F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IIQERC20",
          "name": "iQ",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "wrappedIQ",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_currentWrappedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_limitWrappedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "iQ",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setCurrentWrappedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setLimitWrappedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferWrapped",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrappedIQ",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc1f245ea8058573926d5c8335c492507c691699a116838d8ce3001efaa5d20b3",
  "receipt": {
    "to": null,
    "from": "0xE161eB85f00eC6471E0de06bA1Cfc136C053fFfe",
    "contractAddress": "0x87045eE9e4dEBbeb86EbBCb56E8Dc7c5ba9F1c2F",
    "transactionIndex": 44,
    "gasUsed": "703714",
    "logsBloom": "0x
    "blockHash": "0xd902d57e8a0c6bef6995fe6b742a4faf0e06c3e2d29c057f806d75cac77d6a7a",
    "transactionHash": "0xc1f245ea8058573926d5c8335c492507c691699a116838d8ce3001efaa5d20b3",
    "logs": [],
    "blockNumber": 3784676,
    "cumulativeGasUsed": "6726900",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xb7C3B17f97C2099d44d38E3dbd7496b782005819",
    "0x276780BEDbbB5136a12e0b334670ac50234f9Cb4",
    0
  ],
  "solcInputHash": "12e32539c134adfed090e919c198f2d8",
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IIQERC20\",\"name\":\"iQ\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"wrappedIQ\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_currentWrappedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_limitWrappedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"iQ\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setCurrentWrappedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setLimitWrappedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferWrapped\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrappedIQ\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Minters/TokenMinterLimit.sol\":\"TokenMinterLimit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.7.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\"},\"src/Interfaces/IIQERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n\\npragma solidity 0.7.1;\\n\\nimport \\\"./IMinter.sol\\\";\\n\\n// solhint-disable-next-line no-empty-blocks\\ninterface IIQERC20 {\\n    function mint(address _addr, uint256 _amount) external;\\n\\n    function burn(address _addr, uint256 _amount) external;\\n\\n    function setMinter(IMinter _addr) external;\\n\\n    function minter() external view returns (address);\\n}\\n\",\"keccak256\":\"0x666c6ad31711af77f6aef23fb7c917a5fddd72ba433c56860142b4c29d63eac8\",\"license\":\"AGPL-3.0\"},\"src/Interfaces/IMinter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n\\npragma solidity 0.7.1;\\n\\ninterface IMinter {\\n    event Minted(address _sender, uint256 _amount);\\n    event Burned(address _sender, uint256 _amount);\\n\\n    function mint(uint256 _amount) external;\\n\\n    function burn(uint256 _amount) external;\\n\\n    function iQ() external view returns (address);\\n\\n    function wrappedIQ() external view returns (address);\\n}\\n\",\"keccak256\":\"0xb53706764f97f44c8df69ba90fca03cbad4b88820172eee043643e9fc797301a\",\"license\":\"AGPL-3.0\"},\"src/Minters/TokenMinterLimit.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.7.1;\\n\\nimport \\\"../Interfaces/IMinter.sol\\\";\\nimport \\\"../Interfaces/IIQERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract TokenMinterLimit is IMinter {\\n    IIQERC20 private _iQ;\\n    IERC20 private _wrappedIQ;\\n    uint256 public _limitWrappedTokens;\\n    uint256 public _currentWrappedTokens;\\n    bool internal locked;\\n\\n    modifier blockReentrancy {\\n        require(!locked, \\\"Contract is locked\\\");\\n        locked = true;\\n        _;\\n        locked = false;\\n    }\\n\\n    constructor(\\n        IIQERC20 iQ,\\n        IERC20 wrappedIQ,\\n        uint256 limit\\n    ) {\\n        _iQ = iQ;\\n        _wrappedIQ = wrappedIQ;\\n        _limitWrappedTokens = limit;\\n    }\\n\\n    function mint(uint256 _amount) external override blockReentrancy {\\n        require(_currentWrappedTokens + _amount <= _limitWrappedTokens, \\\"Limit max tokens\\\");\\n        _currentWrappedTokens += _amount;\\n        require(_wrappedIQ.transferFrom(msg.sender, address(this), _amount), \\\"Transfer has failed\\\");\\n        _iQ.mint(msg.sender, _amount);\\n        emit Minted(msg.sender, _amount);\\n    }\\n\\n    function burn(uint256 _amount) external override blockReentrancy {\\n        _iQ.burn(msg.sender, _amount);\\n        _currentWrappedTokens -= _amount;\\n        require(_wrappedIQ.transfer(msg.sender, _amount), \\\"Transfer has failed\\\");\\n        emit Burned(msg.sender, _amount);\\n    }\\n\\n    function transferWrapped(address _addr, uint256 _amount) external {\\n        require(msg.sender == Ownable(address(_iQ)).owner(), \\\"Only IQ owner can tranfer wrapped tokens\\\");\\n        require(address(this) != _iQ.minter(), \\\"Minter is still in use\\\");\\n        require(_wrappedIQ.transfer(_addr, _amount), \\\"Transfer has failed\\\");\\n    }\\n\\n    function setLimitWrappedTokens(uint256 _amount) external {\\n        require(msg.sender == Ownable(address(_iQ)).owner(), \\\"Only IQ owner can limit wrapped tokens\\\");\\n        _limitWrappedTokens = _amount;\\n    }\\n\\n    function setCurrentWrappedTokens(uint256 _amount) external {\\n        require(msg.sender == Ownable(address(_iQ)).owner(), \\\"Only IQ owner can set current wrapped tokens\\\");\\n        _currentWrappedTokens = _amount;\\n    }\\n\\n    function iQ() external view override returns (address) {\\n        return address(_iQ);\\n    }\\n\\n    function wrappedIQ() external view override returns (address) {\\n        return address(_wrappedIQ);\\n    }\\n}\\n\\nabstract contract Ownable {\\n    function owner() public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x83cfb33fe22d50efb4b61a00822faa7b7eb15fc9d8ab58cc397386b014e8db46\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b6d380380610b6d8339818101604052606081101561003357600080fd5b5080516020820151604090920151600080546001600160a01b039384166001600160a01b0319918216179091556001805493909416921691909117909155600255610aea806100836000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806342966c6811610076578063a0712d681161005b578063a0712d6814610156578063aa49edb214610173578063d928b82614610190576100a3565b806342966c681461011f57806348cf5ea31461013c576100a3565b806307ca0f27146100a857806314969f03146100d6578063189def16146100fa5780632b8f6b7e14610102575b600080fd5b6100d4600480360360408110156100be57600080fd5b506001600160a01b038135169060200135610198565b005b6100de610402565b604080516001600160a01b039092168252519081900360200190f35b6100de610411565b6100d46004803603602081101561011857600080fd5b5035610420565b6100d46004803603602081101561013557600080fd5b50356104e3565b6101446106ec565b60408051918252519081900360200190f35b6100d46004803603602081101561016c57600080fd5b50356106f2565b6100d46004803603602081101561018957600080fd5b5035610971565b610144610a34565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e457600080fd5b505afa1580156101f8573d6000803e3d6000fd5b505050506040513d602081101561020e57600080fd5b50516001600160a01b031633146102565760405162461bcd60e51b8152600401808060200182810382526028815260200180610a3b6028913960400191505060405180910390fd5b60008054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d60208110156102cc57600080fd5b50516001600160a01b031630141561032b576040805162461bcd60e51b815260206004820152601660248201527f4d696e746572206973207374696c6c20696e2075736500000000000000000000604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561038157600080fd5b505af1158015610395573d6000803e3d6000fd5b505050506040513d60208110156103ab57600080fd5b50516103fe576040805162461bcd60e51b815260206004820152601360248201527f5472616e7366657220686173206661696c656400000000000000000000000000604482015290519081900360640190fd5b5050565b6000546001600160a01b031690565b6001546001600160a01b031690565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561046c57600080fd5b505afa158015610480573d6000803e3d6000fd5b505050506040513d602081101561049657600080fd5b50516001600160a01b031633146104de5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a8f6026913960400191505060405180910390fd5b600255565b60045460ff161561053b576040805162461bcd60e51b815260206004820152601260248201527f436f6e7472616374206973206c6f636b65640000000000000000000000000000604482015290519081900360640190fd5b6004805460ff1916600117815560008054604080517f9dc29fac000000000000000000000000000000000000000000000000000000008152339481019490945260248401859052516001600160a01b0390911692639dc29fac92604480830193919282900301818387803b1580156105b257600080fd5b505af11580156105c6573d6000803e3d6000fd5b505060038054849003905550506001546040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050506040513d602081101561065157600080fd5b50516106a4576040805162461bcd60e51b815260206004820152601360248201527f5472616e7366657220686173206661696c656400000000000000000000000000604482015290519081900360640190fd5b604080513381526020810183905281517f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7929181900390910190a1506004805460ff19169055565b60035481565b60045460ff161561074a576040805162461bcd60e51b815260206004820152601260248201527f436f6e7472616374206973206c6f636b65640000000000000000000000000000604482015290519081900360640190fd5b6004805460ff19166001179055600254600354820111156107b2576040805162461bcd60e51b815260206004820152601060248201527f4c696d6974206d617820746f6b656e7300000000000000000000000000000000604482015290519081900360640190fd5b6003805482019055600154604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561082d57600080fd5b505af1158015610841573d6000803e3d6000fd5b505050506040513d602081101561085757600080fd5b50516108aa576040805162461bcd60e51b815260206004820152601360248201527f5472616e7366657220686173206661696c656400000000000000000000000000604482015290519081900360640190fd5b60008054604080517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810185905290516001600160a01b03909216926340c10f199260448084019382900301818387803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b5050604080513381526020810185905281517f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe9450908190039091019150a1506004805460ff19169055565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109bd57600080fd5b505afa1580156109d1573d6000803e3d6000fd5b505050506040513d60208110156109e757600080fd5b50516001600160a01b03163314610a2f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610a63602c913960400191505060405180910390fd5b600355565b6002548156fe4f6e6c79204951206f776e65722063616e207472616e666572207772617070656420746f6b656e734f6e6c79204951206f776e65722063616e207365742063757272656e74207772617070656420746f6b656e734f6e6c79204951206f776e65722063616e206c696d6974207772617070656420746f6b656e73a2646970667358221220278d3459386bd5eda14ea920b281808a87e11654be00f2d1762ccf5baa32eb7f64736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c806342966c6811610076578063a0712d681161005b578063a0712d6814610156578063aa49edb214610173578063d928b82614610190576100a3565b806342966c681461011f57806348cf5ea31461013c576100a3565b806307ca0f27146100a857806314969f03146100d6578063189def16146100fa5780632b8f6b7e14610102575b600080fd5b6100d4600480360360408110156100be57600080fd5b506001600160a01b038135169060200135610198565b005b6100de610402565b604080516001600160a01b039092168252519081900360200190f35b6100de610411565b6100d46004803603602081101561011857600080fd5b5035610420565b6100d46004803603602081101561013557600080fd5b50356104e3565b6101446106ec565b60408051918252519081900360200190f35b6100d46004803603602081101561016c57600080fd5b50356106f2565b6100d46004803603602081101561018957600080fd5b5035610971565b610144610a34565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101e457600080fd5b505afa1580156101f8573d6000803e3d6000fd5b505050506040513d602081101561020e57600080fd5b50516001600160a01b031633146102565760405162461bcd60e51b8152600401808060200182810382526028815260200180610a3b6028913960400191505060405180910390fd5b60008054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d60208110156102cc57600080fd5b50516001600160a01b031630141561032b576040805162461bcd60e51b815260206004820152601660248201527f4d696e746572206973207374696c6c20696e2075736500000000000000000000604482015290519081900360640190fd5b6001546040805163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561038157600080fd5b505af1158015610395573d6000803e3d6000fd5b505050506040513d60208110156103ab57600080fd5b50516103fe576040805162461bcd60e51b815260206004820152601360248201527f5472616e7366657220686173206661696c656400000000000000000000000000604482015290519081900360640190fd5b5050565b6000546001600160a01b031690565b6001546001600160a01b031690565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561046c57600080fd5b505afa158015610480573d6000803e3d6000fd5b505050506040513d602081101561049657600080fd5b50516001600160a01b031633146104de5760405162461bcd60e51b8152600401808060200182810382526026815260200180610a8f6026913960400191505060405180910390fd5b600255565b60045460ff161561053b576040805162461bcd60e51b815260206004820152601260248201527f436f6e7472616374206973206c6f636b65640000000000000000000000000000604482015290519081900360640190fd5b6004805460ff1916600117815560008054604080517f9dc29fac000000000000000000000000000000000000000000000000000000008152339481019490945260248401859052516001600160a01b0390911692639dc29fac92604480830193919282900301818387803b1580156105b257600080fd5b505af11580156105c6573d6000803e3d6000fd5b505060038054849003905550506001546040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b15801561062757600080fd5b505af115801561063b573d6000803e3d6000fd5b505050506040513d602081101561065157600080fd5b50516106a4576040805162461bcd60e51b815260206004820152601360248201527f5472616e7366657220686173206661696c656400000000000000000000000000604482015290519081900360640190fd5b604080513381526020810183905281517f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7929181900390910190a1506004805460ff19169055565b60035481565b60045460ff161561074a576040805162461bcd60e51b815260206004820152601260248201527f436f6e7472616374206973206c6f636b65640000000000000000000000000000604482015290519081900360640190fd5b6004805460ff19166001179055600254600354820111156107b2576040805162461bcd60e51b815260206004820152601060248201527f4c696d6974206d617820746f6b656e7300000000000000000000000000000000604482015290519081900360640190fd5b6003805482019055600154604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561082d57600080fd5b505af1158015610841573d6000803e3d6000fd5b505050506040513d602081101561085757600080fd5b50516108aa576040805162461bcd60e51b815260206004820152601360248201527f5472616e7366657220686173206661696c656400000000000000000000000000604482015290519081900360640190fd5b60008054604080517f40c10f190000000000000000000000000000000000000000000000000000000081523360048201526024810185905290516001600160a01b03909216926340c10f199260448084019382900301818387803b15801561091157600080fd5b505af1158015610925573d6000803e3d6000fd5b5050604080513381526020810185905281517f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe9450908190039091019150a1506004805460ff19169055565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109bd57600080fd5b505afa1580156109d1573d6000803e3d6000fd5b505050506040513d60208110156109e757600080fd5b50516001600160a01b03163314610a2f5760405162461bcd60e51b815260040180806020018281038252602c815260200180610a63602c913960400191505060405180910390fd5b600355565b6002548156fe4f6e6c79204951206f776e65722063616e207472616e666572207772617070656420746f6b656e734f6e6c79204951206f776e65722063616e207365742063757272656e74207772617070656420746f6b656e734f6e6c79204951206f776e65722063616e206c696d6974207772617070656420746f6b656e73a2646970667358221220278d3459386bd5eda14ea920b281808a87e11654be00f2d1762ccf5baa32eb7f64736f6c63430007010033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1893,
        "contract": "src/Minters/TokenMinterLimit.sol:TokenMinterLimit",
        "label": "_iQ",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IIQERC20)1582"
      },
      {
        "astId": 1895,
        "contract": "src/Minters/TokenMinterLimit.sol:TokenMinterLimit",
        "label": "_wrappedIQ",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)985"
      },
      {
        "astId": 1897,
        "contract": "src/Minters/TokenMinterLimit.sol:TokenMinterLimit",
        "label": "_limitWrappedTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1899,
        "contract": "src/Minters/TokenMinterLimit.sol:TokenMinterLimit",
        "label": "_currentWrappedTokens",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1901,
        "contract": "src/Minters/TokenMinterLimit.sol:TokenMinterLimit",
        "label": "locked",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)985": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IIQERC20)1582": {
        "encoding": "inplace",
        "label": "contract IIQERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}